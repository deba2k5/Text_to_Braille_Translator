# -*- coding: utf-8 -*-
"""BrailletoText.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TPnWtXFtPpAqMGeyXCT1wPNxLJATN0hw
"""

!pip install gradio --quiet

import gradio as gr

braille_unicode_map = {
    'a': '\u2801', 'b': '\u2803', 'c': '\u2809', 'd': '\u2819', 'e': '\u2811',
    'f': '\u280B', 'g': '\u281B', 'h': '\u2813', 'i': '\u280A', 'j': '\u281A',
    'k': '\u2805', 'l': '\u2807', 'm': '\u280D', 'n': '\u281D', 'o': '\u2815',
    'p': '\u280F', 'q': '\u281F', 'r': '\u2817', 's': '\u280E', 't': '\u281E',
    'u': '\u2825', 'v': '\u2827', 'w': '\u283A', 'x': '\u282D', 'y': '\u283D',
    'z': '\u2835', ' ': '\u2800'
}

def text_to_braille_unicode(text):
    text = text.lower()
    return ''.join(braille_unicode_map.get(ch, '?') for ch in text)

def braille_app(text):
    braille_text = text_to_braille_unicode(text)
    # For speech, just read original text clearly
    spoken_text = text if text.strip() else "Please enter some text."
    return braille_text, spoken_text

with gr.Blocks() as demo:
    gr.Markdown("## 🅱️ Text to Braille Unicode & Voice")
    gr.Markdown(
        """
        Enter text (a-z and spaces).
        Output shows the Braille Unicode characters side by side.
        Click **Speak Text** to hear the original text spoken aloud.
        """
    )

    text_input = gr.Textbox(label="Enter Text", lines=2, placeholder="Type letters a-z and spaces")
    braille_output = gr.Textbox(label="Braille Unicode", lines=2, interactive=False)
    speak_btn = gr.Button("🔊 Speak Text")

    convert_btn = gr.Button("Convert")

    convert_btn.click(fn=braille_app, inputs=text_input, outputs=[braille_output, gr.Textbox(visible=False)])

    speak_btn.click(
        fn=None, inputs=[text_input], outputs=[],
        js="""
        (text) => {
            if(!text) return;
            let utterance = new SpeechSynthesisUtterance(text);
            speechSynthesis.speak(utterance);
        }
        """
    )
    demo.launch()